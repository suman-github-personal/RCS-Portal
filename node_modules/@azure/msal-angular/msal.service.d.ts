import { Location } from "@angular/common";
import { IPublicClientApplication, EndSessionRequest, AuthenticationResult, RedirectRequest, SilentRequest, PopupRequest, SsoSilentRequest, Logger } from "@azure/msal-browser";
import { Observable } from "rxjs";
import { IMsalService } from "./IMsalService";
import * as ɵngcc0 from '@angular/core';
export declare class MsalService implements IMsalService {
    instance: IPublicClientApplication;
    private location;
    private redirectHash;
    private logger;
    constructor(instance: IPublicClientApplication, location: Location);
    acquireTokenPopup(request: PopupRequest): Observable<AuthenticationResult>;
    acquireTokenRedirect(request: RedirectRequest): Observable<void>;
    acquireTokenSilent(silentRequest: SilentRequest): Observable<AuthenticationResult>;
    handleRedirectObservable(): Observable<AuthenticationResult>;
    loginPopup(request?: PopupRequest): Observable<AuthenticationResult>;
    loginRedirect(request?: RedirectRequest): Observable<void>;
    logout(logoutRequest?: EndSessionRequest): Observable<void>;
    ssoSilent(request: SsoSilentRequest): Observable<AuthenticationResult>;
    getLogger(): Logger;
    setLogger(logger: Logger): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MsalService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<MsalService>;
}

//# sourceMappingURL=msal.service.d.ts.map